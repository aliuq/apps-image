name: Update README

on:
  push:
    branches:
      - master
    paths:
      - apps/*/README.md

jobs:
  sync-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史记录

      - name: Prepare
        id: prepare
        uses: aliuq/script-action@v1
        with:
          auto_install: true
          script: |
            import path from 'node:path'
            import fs from 'node:fs'

            // 获取最近一次提交的文件
            const changedFiles = await execCommand('git', ['diff-tree', '--no-commit-id', '--name-only', '-r', 'HEAD'])

            // 过滤出 README.md 文件
            const files = changedFiles.split('\n')
              .filter(file => file.match(/^apps\/.*\/README\.md$/))

            await core.group('Changed files', async () => core.info(files.join('\n')))

            if (!files.length) {
              core.info('No README.md files changed')
              core.setOutput('status', 'success')
              process.exit(0)
            }

            const readmePath = files[files.length - 1]
            const appDir = path.dirname(readmePath)
            const metaFile = path.join(appDir, 'meta.json')
            const meta = JSON.parse(fs.readFileSync(metaFile, 'utf-8'))

            const images = meta.dockerMeta.images
            const matchDockerhub = images.find(i => i.match(/^aliuq\//))
            const matchGhcr = images.find(i => i.match(/^ghcr.io\//))

            const repo = matchDockerhub ? matchDockerhub : matchGhcr ? matchGhcr?.replace(/^ghcr.io\//, '') : ''
            const app = matchDockerhub ? matchDockerhub.split('/')[1] : matchGhcr ? matchGhcr.split('/')[2] : ''

            console.log('repo:', repo)
            console.log('app:', app)

      # - name: Sync README
      #   uses: peter-evans/dockerhub-description@v4
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #     repository: ${{ steps.prep.outputs.repo }}
      #     readme-filepath: ${{ steps.prep.outputs.readme_path }}
