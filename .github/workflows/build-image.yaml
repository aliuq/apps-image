name: Build Docker Image

on:
  workflow_dispatch:
    inputs:
      context:
        description: App Contextï¼Œe.g. apps/icones
        type: choice
        required: true
        options:
          - test/weektodo
          - test/weektodo-mul
          - test/inpaint-web-bar
      variants:
        description: Build variants, e.g. latest,stable
        default: latest
        type: string
      debug:
        description: Debug mode
        default: false
        type: boolean
  pull_request:
    branches:
      - master
      - dev

jobs:
  metadata:
    name: Resolve Docker Metadata
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'pull_request'
    permissions:
      pull-requests: read
    outputs:
      matrix: ${{ steps.metadata.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Resolve metadata
        id: metadata
        uses: ./action/resolve-meta
        env:
          TZ: Asia/Shanghai
        with:
          context: ${{ inputs.context }}
          variants: ${{ inputs.variants }}
          debug: ${{ inputs.debug }}

  docker-build:
    needs: metadata
    name: Build ${{ matrix.variant }}
    runs-on: ubuntu-latest
    if: needs.metadata.outputs.matrix
    permissions:
      contents: read
      packages: write
    strategy:
      matrix: ${{ fromJson(needs.metadata.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.metadata.imageLines }}
          tags: ${{ matrix.metadata.tagLines }}
          labels: ${{ matrix.metadata.labelLines }}
          annotations: ${{ matrix.metadata.labelLines }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ matrix.pushDocker }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        if: ${{ matrix.pushGhcr }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Aliyun ACR
        uses: docker/login-action@v3
        if: ${{ matrix.pushAli && env.ACR_REGISTRY && env.ACR_USERNAME && env.ACR_PASSWORD }}
        env:
          ACR_REGISTRY: ${{ secrets.ALI_ACR_REGISTRY }}
          ACR_USERNAME: ${{ secrets.ALI_ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ALI_ACR_PASSWORD }}
        with:
          registry: ${{ secrets.ALI_ACR_REGISTRY }}
          username: ${{ secrets.ALI_ACR_USERNAME }}
          password: ${{ secrets.ALI_ACR_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.build.context }}
          file: ${{ matrix.build.file }}
          platforms: ${{ matrix.build.platformLines }}
          push: ${{ matrix.build.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
