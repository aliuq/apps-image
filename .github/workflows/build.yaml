name: Release Docker Image

on:
  push:
    branches:
      - master
    paths:
      - 'Dockerfile'
      - 'app/**'
      - 'base/**'

jobs:
  build:
    runs-on: ubuntu-latest
    # 如果提交日志中包含 [skip ci] 则不执行
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed names and outout
        id: changed
        shell: bash
        run: |
          changed_names=$(git diff --name-only HEAD^ | grep -E '^(app|base)/' | sort | uniq)
          if [ -z "$changed_names" ]; then
            echo "No changes in app or base directory"
            exit 0
          fi
          echo "names=$(echo $changed_names)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        if: contains(github.event.head_commit.message, '[skip docker]') == false || contains(github.event.head_commit.message, '[skip github]') == false
        run: |
          if [ -z "${{ steps.changed.outputs.names }}" ]; then
            echo "No changes in app or base directory"
            exit 0
          fi

          for name in ${{ steps.changed.outputs.names }}; do
            IFS='/' read -ra ADDR <<< "$name"
            category=${ADDR[0]}
            imageName=${ADDR[1]}
            dockerfileName=${ADDR[2]}
            version=$(cat $name | grep -E 'LABEL version=' | awk -F'=' '{print $2}' | tr -d '"')

            if [[ $dockerfileName != "Dockerfile" && $dockerfileName != "Dockerfile."* ]]; then
              echo "No Dockerfile found in $name"
              continue
            fi

            tag="$version"
            if [[ $dockerfileName == "Dockerfile."* ]]; then
              tag=${dockerfileName:11}
            fi

            builderName="builder-$imageName-$tag"

            echo ""
            echo "文件路径: $name"
            echo "镜像分类: $category"
            echo "镜像名称: $imageName"
            echo "镜像标签: $tag"
            echo "镜像版本: $version"
            echo "Dockerfile 文件名: $dockerfileName"
            echo "执行命令 ($builderName):"

            echo "> docker buildx create --name $builderName --driver docker-container"
            docker buildx create --name $builderName --driver docker-container

            echo "> docker buildx use $builderName"
            docker buildx use $builderName
            
            echo "> docker buildx build --no-cache -t $imageName:$tag --load --label \"category=$category\" -f $name ./$category/$imageName/"
            docker buildx build --no-cache -t $imageName:$tag --load --label "category=$category" -f $name ./$category/$imageName/
          done

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: contains(github.event.head_commit.message, '[skip docker]') == false
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Docker Hub
        if: contains(github.event.head_commit.message, '[skip docker]') == false
        run: |
          for name in ${{ steps.changed.outputs.names }}; do
            IFS='/' read -ra ADDR <<< "$name"
            category=${ADDR[0]}
            imageName=${ADDR[1]}
            dockerfileName=${ADDR[2]}
            version=$(cat $name | grep -E 'LABEL version=' | awk -F'=' '{print $2}' | tr -d '"')

            tag="$version"
            customTag=false
            if [[ $dockerfileName == "Dockerfile."* ]]; then
              customTag=true
              tag=${dockerfileName:11}
            fi

            dockerHubName="${{ secrets.DOCKERHUB_USERNAME }}/$imageName:$tag"
            echo "> docker tag $imageName:$tag $dockerHubName"
            docker tag $imageName:$tag $dockerHubName
            echo "> docker push $dockerHubName"
            docker push $dockerHubName

            if [ $customTag == false ]; then
              dockerHubLatestName="${{ secrets.DOCKERHUB_USERNAME }}/$imageName:latest"
              echo "> docker tag $imageName:$tag $dockerHubLatestName"
              docker tag $imageName:$tag $dockerHubLatestName
              echo "> docker push $dockerHubLatestName"
              docker push $dockerHubLatestName
            fi
          done

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: contains(github.event.head_commit.message, '[skip github]') == false
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GitHub Container Registry
        if: contains(github.event.head_commit.message, '[skip github]') == false
        run: |
          for name in ${{ steps.changed.outputs.names }}; do
            IFS='/' read -ra ADDR <<< "$name"
            category=${ADDR[0]}
            imageName=${ADDR[1]}
            dockerfileName=${ADDR[2]}
            version=$(cat $name | grep -E 'LABEL version=' | awk -F'=' '{print $2}' | tr -d '"')

            tag="$version"
            customTag=false
            if [[ $dockerfileName == "Dockerfile."* ]]; then
              customTag=true
              tag=${dockerfileName:11}
            fi

            dockerHubName="ghcr.io/${{ github.actor }}/$imageName:$tag"
            echo "> docker tag $imageName:$tag $dockerHubName"
            docker tag $imageName:$tag $dockerHubName
            echo "> docker push $dockerHubName"
            docker push $dockerHubName

            if [ $customTag == false ]; then
              dockerHubLatestName="ghcr.io/${{ github.actor }}/$imageName:latest"
              echo "> docker tag $imageName:$tag $dockerHubLatestName"
              docker tag $imageName:$tag $dockerHubLatestName
              echo "> docker push $dockerHubLatestName"
              docker push $dockerHubLatestName
            fi
          done
